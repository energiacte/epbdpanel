##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
#
# Server configuration
#

upstream epbdpanel_app_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server unix:/home/webapps/epbdpanel/run/gunicorn.sock fail_timeout=0;
}

server {
	listen 8088;
	listen [::]:8088;

	server_name codigotecnico.org;

	#root /var/www/html;
    client_max_body_size    20M;
    client_body_buffer_size     20M;

    # Recupera IP original desde toledo.ietcc.csic.es
    set_real_ip_from  161.111.231.250;
    real_ip_header    X-Forwarded-For;
    real_ip_recursive on;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	access_log  /var/log/nginx/epbdpanel_access.log;
	error_log  /var/log/nginx/epbdpanel_error.log notice; #error|notice|info


	location /static {
        	alias   /home/webapps/epbdpanel/epbdserver/static;
            if ($request_uri ~* ".(jpg|jpeg|gif|eot|ttf|woff|woff2|gz|zip|flv|rar|wmv|avi|css|swf|png|htc|ico|mpeg|mpg|txt|mp3|mov|js)(\?v=[0-9.]+)?$") {
                expires 1M;
                access_log off;
                add_header Cache-Control "public";
                break;
            }
	}


    location /favicon.ico {
            alias    /home/webapps/epbdpanel/deployresources/favicon.ico;
    }

	location / {
            #rewrite ^/epbdpanel(.*)$ $1 break;
        	# an HTTP header important enough to have its own Wikipedia entry:
	        #   http://en.wikipedia.org/wiki/X-Forwarded-For
	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        	# enable this if and only if you use HTTPS, this helps Rack
	        # set the proper protocol for doing redirects:
        	# proxy_set_header X-Forwarded-Proto https;

	        # pass the Host: header from the client right along so redirects
        	# can be set properly within the Rack application
	        proxy_set_header Host $http_host;

        	# we don't want nginx trying to do something clever with
	        # redirects, we set the Host: header above already.
        	proxy_redirect off;

	        # set "proxy_buffering off" *only* for Rainbows! when doing
        	# Comet/long-poll stuff.  It's also safe to set if you're
	        # using only serving fast clients with Unicorn + nginx.
        	# Otherwise you _want_ nginx to buffer responses to slow
	        # clients, really.
        	# proxy_buffering off;

	        # Try to serve static files from nginx, no point in making an
        	# *application* server like Unicorn/Rainbows! serve static files.
	        #if (!-f $request_filename) {
        	    proxy_pass http://epbdpanel_app_server/;
	        #    break;
        	#}
	}

	# ERROR
	error_page 404 /index.html;

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php5-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php5-fpm:
	#	fastcgi_pass unix:/var/run/php5-fpm.sock;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one

	location ~ /\.ht {
		deny all;
	}
}

